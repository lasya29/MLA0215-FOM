import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error
import matplotlib.pyplot as plt

# Load data (assuming it's stored in a CSV file)
# data = pd.read_csv('sales_data.csv')

# Sample dataset
data = pd.DataFrame({
    'Sales': [100, 200, 300, 400, 500],
    'Ad_Expenditure': [50, 60, 70, 80, 90],
    'Inventory': [10, 15, 10, 15, 20]
})

# Independent variables (Ad_Expenditure, Inventory) and dependent variable (Sales)
X = data[['Ad_Expenditure', 'Inventory']]
y = data['Sales']

# Split the data into training and test sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=42)

# Create a linear regression model and train it
model = LinearRegression()
model.fit(X_train, y_train)

# Predict the sales for the test set
y_pred = model.predict(X_test)

# Calculate the mean squared error
mse = mean_squared_error(y_test, y_pred)
print("Mean Squared Error:", mse)

# Plot actual vs predicted values
plt.scatter(y_test, y_pred)
plt.xlabel("Actual Sales")
plt.ylabel("Predicted Sales")
plt.title("Actual vs Predicted Sales")
plt.show()
